// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<CollapsibleContent /> render 1`] = `
<View
  style={
    Object {
      "alignItems": "center",
      "flex": 1,
      "paddingHorizontal": 10,
    }
  }
>
  <View
    style={
      Object {
        "flexDirection": "row",
        "marginVertical": 5,
      }
    }
  >
    <View
      accessible={true}
      isTVSelectable={true}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "opacity": 1,
        }
      }
    >
      <Text
        accessible={true}
        allowFontScaling={false}
        ellipsizeMode="tail"
        style={
          Array [
            Object {
              "color": "#fcda53",
              "fontSize": 28,
            },
            Object {
              "paddingHorizontal": 8,
            },
            Object {
              "fontFamily": "icomoon",
              "fontStyle": "normal",
              "fontWeight": "normal",
            },
          ]
        }
      >
        
      </Text>
    </View>
    <View
      accessible={true}
      isTVSelectable={true}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "opacity": 1,
        }
      }
    >
      <Text
        accessible={true}
        allowFontScaling={false}
        ellipsizeMode="tail"
        style={
          Array [
            Object {
              "color": "#fcda53",
              "fontSize": 28,
            },
            Object {
              "paddingHorizontal": 8,
            },
            Object {
              "fontFamily": "icomoon",
              "fontStyle": "normal",
              "fontWeight": "normal",
            },
          ]
        }
      >
        
      </Text>
    </View>
    <View
      accessible={true}
      isTVSelectable={true}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "opacity": 1,
        }
      }
    >
      <Text
        accessible={true}
        allowFontScaling={false}
        ellipsizeMode="tail"
        style={
          Array [
            Object {
              "color": "#fcda53",
              "fontSize": 28,
            },
            Object {
              "paddingHorizontal": 8,
            },
            Object {
              "fontFamily": "icomoon",
              "fontStyle": "normal",
              "fontWeight": "normal",
            },
          ]
        }
      >
        
      </Text>
    </View>
    <View
      accessible={true}
      isTVSelectable={true}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "opacity": 1,
        }
      }
    >
      <Text
        accessible={true}
        allowFontScaling={false}
        ellipsizeMode="tail"
        style={
          Array [
            Object {
              "color": "#fcda53",
              "fontSize": 28,
            },
            Object {
              "paddingHorizontal": 8,
            },
            Object {
              "fontFamily": "icomoon",
              "fontStyle": "normal",
              "fontWeight": "normal",
            },
          ]
        }
      >
        
      </Text>
    </View>
    <View
      accessible={true}
      isTVSelectable={true}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "opacity": 1,
        }
      }
    >
      <Text
        accessible={true}
        allowFontScaling={false}
        ellipsizeMode="tail"
        style={
          Array [
            Object {
              "color": "#fcda53",
              "fontSize": 28,
            },
            Object {
              "paddingHorizontal": 8,
            },
            Object {
              "fontFamily": "icomoon",
              "fontStyle": "normal",
              "fontWeight": "normal",
            },
          ]
        }
      >
        
      </Text>
    </View>
  </View>
  <BVLinearGradient
    colors={
      Array [
        4282147443,
        4281317757,
      ]
    }
    endPoint={
      Object {
        "x": 1,
        "y": 1,
      }
    }
    locations={
      Array [
        0,
        1,
      ]
    }
    startPoint={
      Object {
        "x": 0,
        "y": 1,
      }
    }
    style={
      Object {
        "borderRadius": 10,
        "marginVertical": 15,
        "zIndex": 1,
      }
    }
  >
    <View
      style={
        Object {
          "alignSelf": "center",
          "backgroundColor": "#222f3f",
          "borderRadius": 10,
          "height": 75,
          "position": "absolute",
          "top": 2.5,
          "width": 275,
          "zIndex": 2,
        }
      }
    />
    <TextInput
      allowFontScaling={true}
      multiline={true}
      onChangeText={[Function]}
      placeholder="I'd like to add a kudo because..."
      placeholderTextColor="#7f9d90"
      style={
        Object {
          "borderRadius": 10,
          "color": "#7f9d90",
          "fontSize": 16,
          "height": 80,
          "paddingHorizontal": 15,
          "paddingVertical": 3,
          "width": 280,
          "zIndex": 3,
        }
      }
      underlineColorAndroid="transparent"
    />
  </BVLinearGradient>
  <View
    accessible={true}
    isTVSelectable={true}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Object {
        "height": 50,
        "opacity": 1,
        "width": 150,
      }
    }
  >
    <BVLinearGradient
      colors={
        Array [
          4282147443,
          4281317757,
        ]
      }
      endPoint={
        Object {
          "x": 1,
          "y": 1,
        }
      }
      locations={
        Array [
          0,
          1,
        ]
      }
      startPoint={
        Object {
          "x": 0,
          "y": 1,
        }
      }
      style={
        Object {
          "borderRadius": 25,
          "zIndex": 1,
        }
      }
    >
      <View
        style={
          Array [
            Object {
              "alignSelf": "center",
              "backgroundColor": "transparent",
              "borderRadius": 25,
              "height": 42,
              "position": "absolute",
              "top": 2.5,
              "width": 142,
              "zIndex": 2,
            },
            undefined,
          ]
        }
      />
      <Text
        accessible={true}
        adjustsFontSizeToFit={true}
        allowFontScaling={true}
        ellipsizeMode="tail"
        style={
          Object {
            "color": "#ffffff",
            "fontFamily": "Lato-Regular",
            "fontSize": 20,
            "paddingVertical": 10,
            "textAlign": "center",
            "zIndex": 3,
          }
        }
      >
        GIVE KUDO
      </Text>
    </BVLinearGradient>
  </View>
</View>
`;
